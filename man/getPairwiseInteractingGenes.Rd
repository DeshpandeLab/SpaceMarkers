% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getInteractingGenes.R
\name{getPairwiseInteractingGenes}
\alias{getPairwiseInteractingGenes}
\title{getPairwiseInteractingGenes}
\usage{
getPairwiseInteractingGenes(
  data,
  spPatterns,
  mode = c("DE", "residuals"),
  optParams = NULL,
  reconstruction = NULL,
  hotspots = NULL,
  minOverlap = 50,
  analysis = c("enrichment", "overlap"),
  patternPairs = NULL,
  ...,
  workers = NULL
)
}
\arguments{
\item{data}{A matrix of gene expression data with genes as rows and
spots as columns}

\item{spPatterns}{A matrix of spatial patterns with barcodes as rows
and patterns as columns}

\item{mode}{The mode for SpaceMarkers analysis. Default is "DE" for
differential expression analysis. "residuals" mode is used if reconstruction
matrix is provided}

\item{optParams}{A matrix of optimal parameters for each pattern}

\item{reconstruction}{A matrix of reconstructed gene expression data}

\item{hotspots}{A matrix of hotspot regions for each pattern}

\item{minOverlap}{Minimum number of overlapping spots between patterns
to consider them as interacting. Default is 50}

\item{analysis}{The type of analysis to be performed. Default is "enrichment"}

\item{patternPairs}{A matrix of pattern pairs to be analyzed. Default is}

\item{...}{Additional arguments to be passed to the SpaceMarkers function}

\item{workers}{(optional) Number of workers to
be used for parallel processing.}
}
\description{
Performs pairwise analysis to find genes associated with
spatial interaction between pairs of spatially varying patterns.
}
\details{
================
}
\examples{
library(SpaceMarkers)
#Visium data links
urls <- read.csv(system.file("extdata","visium_data.txt",
package="SpaceMarkers",mustWork = TRUE))
counts_url <- urls[["visium_url"]][1]
sp_url <- urls[["visium_url"]][2]
#Remove present Directories if any
unlink(basename(sp_url))
unlink("spatial", recursive = TRUE)
files <- list.files(".")[grepl(basename(counts_url),list.files("."))]
unlink(files)
download.file(counts_url,basename(counts_url), mode = "wb")
counts_matrix<-load10XExpr(visiumDir=".",h5filename = basename(counts_url))
#Obtaining CoGAPS Patterns
cogaps_result <- readRDS(system.file("extdata","CoGAPS_result.rds",
package="SpaceMarkers",mustWork = TRUE))
features <- intersect(rownames(counts_matrix),rownames(
    slot(cogaps_result,"featureLoadings")))
barcodes <- intersect(colnames(counts_matrix),rownames(
    slot(cogaps_result,"sampleFactors")))
counts_matrix <- counts_matrix[features,barcodes]
cogaps_matrix <- slot(cogaps_result,"featureLoadings")[features,]\%*\%
    t(slot(cogaps_result,"sampleFactors")[barcodes,])
#Obtaining Spatial Coordinates
download.file(sp_url, basename(sp_url), mode = "wb")
untar(basename(sp_url))
spCoords <- load10XCoords(visiumDir = ".", version = "1.0")
rownames(spCoords) <- spCoords$barcode
spCoords <- spCoords[barcodes,]
spPatterns <- cbind(spCoords,slot(cogaps_result,"sampleFactors")[barcodes,])
data("curated_genes")
spPatterns<-spPatterns[c("barcode","y","x","Pattern_1",
"Pattern_3","Pattern_5")]
counts_matrix <- counts_matrix[curated_genes,]
cogaps_matrix <- cogaps_matrix[curated_genes, ]
optParams <- matrix(c(6, 2, 6, 2, 6, 2), nrow = 2)
rownames(optParams) <- c("sigmaOpt","threshOpt")
colnames(optParams) <- c("Pattern_1","Pattern_3","Pattern_5")
SpaceMarkersMode <- "DE"
patternPairs <- matrix(c("Pattern_1", "Pattern_1", 
           "Pattern_3", "Pattern_5"), nrow=2)
SpaceMarkers_test <- getPairwiseInteractingGenes(
    data=counts_matrix,reconstruction=NULL,
    optParams = optParams,
    spPatterns = spPatterns,
    mode="DE",analysis="enrichment", patternPairs=patternPairs)
#Remove present Directories if any
unlink(basename(sp_url))
unlink("spatial", recursive = TRUE)
files <- list.files(".")[grepl(basename(counts_url),list.files("."))]
unlink(files)

}
