% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotMultiWayViolin.R
\name{plotMultiWayViolin}
\alias{plotMultiWayViolin}
\title{Plot Multi-Way Violin for a Gene Across Pattern/Influence Hotspots}
\usage{
plotMultiWayViolin(
  hotspots,
  cell1,
  cell2,
  gene,
  gene_id_col = "gene_name",
  counts_col = "gene_exp",
  influence_id = NULL,
  cell_id = "barcode",
  violin_order = NULL,
  colors = c("blue", "yellow", "red", "orange"),
  out = "SpaceMarkerViolin.png",
  width = 10,
  height = 10
)
}
\arguments{
\item{hotspots}{A \code{data.frame} that already contains:
\itemize{
\item an identifier column given by \code{cell_id} (default \code{"barcode"});
\item a gene identifier column \code{gene_id_col} (default \code{"gene_name"});
\item a numeric expression column \code{counts_col} (default \code{"gene_exp"});
\item hotspot label columns for \code{cell1}, \code{cell2}, and their corresponding
influence columns (e.g., \code{"cell1-influence"}, \code{"cell2-influence"}), and
optionally a legacy pair column (\code{"cell1_cell2"} or \code{"cell2_cell1"}).
Typically this is the output of \code{\link[=getHotSpotsGeneExpr]{getHotSpotsGeneExpr()}}.
}}

\item{cell1}{Character scalar: the name of the first cell pattern column to
include on the x-axis.}

\item{cell2}{Character scalar: the name of the second cell pattern column to
include on the x-axis.}

\item{gene}{Character scalar: the gene to plot (must match values in
\code{gene_id_col}).}

\item{gene_id_col}{Column name holding gene identifiers (default \code{"gene_name"}).}

\item{counts_col}{Column name holding expression values (default \code{"gene_exp"}).}

\item{influence_id}{Substring used to identify influence columns. If \code{NULL},
it is auto-detected as \code{"influence"} (fallback \code{"near"}). This string is
matched in column names to select e.g. \code{"cell1-influence"}.}

\item{cell_id}{Identifier column name (default \code{"barcode"}). If \code{NULL},
row names are treated as barcodes.}

\item{violin_order}{Optional character vector specifying the order of
hotspot groups on the x-axis. If \code{NULL}, the order is inferred as
\verb{c(cell1, <influences>, cell2, [legacy_if_present])}.}

\item{colors}{Fill colors passed to \code{scale_fill_manual()}. The length should
match the number of hotspot groups plotted. If a legacy \code{cell1_cell2} (or
\code{cell2_cell1}) column is detected, \code{"darkgreen"} is appended to \code{colors}.}

\item{out}{File path to save the plot (e.g., \code{"SpaceMarkerViolin.png"}).
Use \code{NULL} to skip saving and only return the \code{ggplot} object.}

\item{width, height}{Dimensions (inches) for the saved figure.}
}
\value{
A \code{ggplot2} object. If \code{out} is non-\code{NULL}, the plot is also written
to disk via \code{ggsave()}.
}
\description{
Produces a violin + jitter plot of a single gene's expression across a set
of hotspot categories derived from \code{cell1}, \code{cell2}, and their \emph{influence}
interactions. Intended to visualize how expression differs in the pattern
cells, the influenced counterparts, and (optionally) their legacy pair.
}
\details{
The function:
\enumerate{
\item Detects and selects relevant hotspot columns containing \code{cell1}, \code{cell2},
and the \code{influence_id} substring, while avoiding "double-influence"
columns that contain the substring twice.
\item Optionally includes a legacy \code{cell1_cell2} (or \code{cell2_cell1}) column if
present.
\item Filters rows to the requested \code{gene}, pivots hotspot labels to long format
(keeping only non-\code{NA} labels), and draws a violin + jitter plot with
manual fills and angled x-axis labels.
}
}
\examples{
# Minimal reproducible sketch:
set.seed(42)
counts <- matrix(rpois(12, 2), nrow = 3,
                dimnames = list(c("GeneA","GeneB","GeneC"), paste0("bc",1:4)))
#Hotspot labels (NA = absent, non-NA = present)
## Pattern Hotspots
pat_hs <- data.frame(
 barcode = paste0("bc",1:4),
  Acell   = c("Acell", NA, "Acell", NA),
   Bcell   = c(NA, "Bcell", NA, "Bcell"))
   ## Influence hot
inf_hs <- data.frame(
barcode = paste0("bc",1:4),
Acell = c(NA, "Acell", "Acell", NA),
Bcell = c(NA, NA, "Bcell", NA),
check.names = FALSE)
# Combine pattern and influence hotspots
features <- setdiff(colnames(pat_hs),c("barcode","x","y"))
all_hs <- mergeAllHotspotDfs(pattern_hotspots = pat_hs,
influence_hotspots = inf_hs,features = features)
# Identify pairwise interactions between pattern hotspots and influence hotspots
pairwise_hs <- addPairwiseInteractCol(all_hs)
gene_df <- getHotSpotsGeneExpr(pairwise_hs, counts, gene = "GeneA")
# Plot 4 way (optional 5) of pattern-influence
p <- plotMultiWayViolin(
hotspots = gene_df,
cell1 = "Acell", cell2 = "Bcell",
gene = "GeneA",
influence_id = "influence",
out = NULL)
print(p)
}
\seealso{
\code{\link[=getHotSpotsGeneExpr]{getHotSpotsGeneExpr()}}, \code{\link[=addPairwiseInteractCol]{addPairwiseInteractCol()}}, \code{\link[=addInteractCol]{addInteractCol()}}
}
